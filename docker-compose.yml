services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    depends_on:
      mongodb:
        condition: service_healthy
    env_file:
      - .env.production
    volumes:
      - ./backend/config:/usr/src/app/config:ro
      - ./backend/logs:/usr/src/app/logs
      - ./.env.production:/usr/src/app/.env:ro
      - static-assets:/usr/src/app/public
    networks:
      - app-network
    restart: on-failure:5

  mongodb:
    image: mongo:latest
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: eqalpha/keydb:latest
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: unless-stopped

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot:ro
      - /etc/letsencrypt/options-ssl-nginx.conf:/etc/letsencrypt/options-ssl-nginx.conf:ro
      - static-assets:/usr/share/nginx/html:ro
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
  redis-data:
  static-assets:
